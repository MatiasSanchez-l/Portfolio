---
import '../styles/global.css';
import Header from "../components/header/Header.astro";
import Footer from "../components/footer/Footer.astro";
import {useTranslations} from "../i18n/utils";
import {languageList} from "../i18n/ui";

const currentLang = Astro.currentLocale || 'en';
const translateLabels = useTranslations(currentLang as keyof typeof languageList);
---

<script is:inline>
    // Theme initialization to prevent flashing
    const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };
    
    const applyTheme = (theme) => {
        const isDark = theme === 'dark';
        document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
    };
    
    const initializeTheme = () => {
        const theme = getThemePreference();
        applyTheme(theme);
        
        if (typeof localStorage !== 'undefined') {
            const observer = new MutationObserver(() => {
                const isDark = document.documentElement.classList.contains('dark');
                localStorage.setItem('theme', isDark ? 'dark' : 'light');
            });
            observer.observe(document.documentElement, {attributes: true, attributeFilter: ['class']});
        }
    };
    
    // Initialize theme immediately
    initializeTheme();
</script>

<html lang={currentLang}>
<head>
    <meta charset="utf-8"/>
    <link rel="icon" type="image/svg+xml" href="/logo/mslogo.ico"/>
    <meta name="viewport" content="width=device-width"/>
    <meta name="generator" content={Astro.generator}/>
    <title>{translateLabels("head.title")}</title>
</head>
<body class="min-h-screen flex flex-col">
<Header />
<main class="flex-1">
    <slot/>
</main>
<Footer/>
</body>
</html>